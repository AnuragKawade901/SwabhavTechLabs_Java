package com.aurionpro.AbstractFactory.model;

interface Button {
    void render();
}

interface Checkbox {
    void render();
}
interface UIFactory {
    Button createButton();
    Checkbox createCheckbox();
}

class LightButton implements Button {
    public void render() {
        System.out.println("Rendering Light Button");
    }
}

class LightCheckbox implements Checkbox {
    public void render() {
        System.out.println("Rendering Light Checkbox");
    }
}
class DarkButton implements Button {
    public void render() {
        System.out.println("Rendering Dark Button");
    }
}

class DarkCheckbox implements Checkbox {
    public void render() {
        System.out.println("Rendering Dark Checkbox");
    }
}

public class AbstractFactoryExample {
    public static void main(String[] args) {
        // Choose factory based on theme
        UIFactory factory = new DarkUIFactory(); // Try LightUIFactory too

        Application app = new Application(factory);
        app.renderUI();
    }
}
}
