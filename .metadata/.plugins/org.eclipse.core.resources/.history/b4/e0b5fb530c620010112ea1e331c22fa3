package com.aurionpro.SOLIDS.IMS.model;

import java.util.ArrayList;
import java.util.List;

import com.aurionpro.SOLIDS.Order.model.Notifier;

public class InventoryService {
	private List<Product> products = new ArrayList<>();
    private List<Notifier> notifiers;
    private ReorderService reorderService;
    private IValuationStrategy valuationStrategy;

    public InventoryService(List<Notifier> notifiers, ReorderService reorderService, ValuationStrategy valuationStrategy) {
        this.notifiers = notifiers;
        this.reorderService = reorderService;
        this.valuationStrategy = valuationStrategy;
    }

    public void addProduct(Product product) {
        products.add(product);
    }

    public void removeStock(String productName, int qty) {
        for (Product p : products) {
            if (p.getName().equalsIgnoreCase(productName)) {
                int newQty = p.getQuantity() - qty;
                p.setQuantity(newQty);
                System.out.println("Stock updated: Removed " + qty + " units of '" + p.getName() + "'");
                System.out.println("Current stock for " + p.getName() + ": " + p.getQuantity());

                if (p.getQuantity() <= p.getReorderLevel()) {
                    System.out.println("Reorder threshold reached for '" + p.getName() + "'. Triggering reorder...");
                    reorderService.reorder(p);
                    for (Notifier notifier : notifiers) {
                        notifier.send("Low stock alert for '" + p.getName() + "'");
                    }
                }
                return;
            }
        }
        System.out.println("Product not found.");
    }

    public void showInventoryValue() {
        double total = valuationStrategy.calculateValue(products);
        System.out.printf("Total inventory value (using %s): $%,.2f\n",
            valuationStrategy.getClass().getSimpleName().replace("Valuation", ""), total);
    }
}
